{% extends 'layouts/app.html.twig' %}

{% block title %}Teams{% endblock %}

{% block breadcrumbs %}
    <nav style="--bs-breadcrumb-divider: '>';" aria-label="breadcrumb">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a href="#">Home</a></li>
            <li class="breadcrumb-item active" aria-current="page">Teams</li>
        </ol>
    </nav>
{% endblock %}

{% block body %}
    <div class="row px-3">
        <div class="col-12">
            <div class=" align-content-right" >
                <div class="card-body">
                    <a href="{{ path('teams.create') }}" class="btn btn-primary float-right">Add Team</a>
                </div>
            </div>
        </div>
        <div class="col-12 my-5">
            <div class="">
                <table class="table table-hover">
                    <thead class="table-primary">
                    <tr>
                        <th scope="col">#</th>
                        <th scope="col">Name</th>
                        <th scope="col">Country</th>
                        <th scope="col">Money Balance</th>
                        <th scope="col">Actions</th>
                    </tr>
                    </thead>
                    <tbody>
                    {% for team in teams %}
                        <tr>
                            <th scope="row">{{ team.id }}</th>
                            <td>{{ team.name }}</td>
                            <td>{{ team.country }}</td>
                            <td>{{ team.moneyBalance }}</td>
                            <td>
                                <div>
                                    <button type="button" data-team-name="{{ team.name }}" data-team-players="{{ team.players|serialize('json', context) }}" class="btn btn-outline-info show-players">Players</button>
{#                                    <a href="{{ path('teams.show', {id: team.id}) }}" class="btn btn-outline-primary">Show</a>#}
                                    <a href="{{ path('teams.edit', {id: team.id}) }}" class="btn btn-outline-primary">Edit</a>
                                    <a type="button" data-item-name="{{ team.name }}" data-item-id="{{ team.id }}" class="btn btn-outline-danger delete-btn">Delete</a>
                                </div>
                            </td>
                        </tr>
                    {% else %}
                        <tr>
                            <td colspan="5">no records found</td>
                        </tr>
                    {% endfor %}
                    </tbody>
                </table>
            </div>
        </div>
        <div class="col-12">
            <nav aria-label="Page navigation example">
                <ul class="pagination justify-content-end">
                    <li class="page-item disabled">
                        <a class="page-link">Previous</a>
                    </li>
                    <li class="page-item"><a class="page-link active" href="#">1</a></li>
                    <li class="page-item"><a class="page-link" href="#">2</a></li>
                    <li class="page-item"><a class="page-link" href="#">3</a></li>
                    <li class="page-item">
                        <a class="page-link" href="#">Next</a>
                    </li>
                </ul>
            </nav>
        </div>
    </div>
{% endblock %}

{% block scripts %}
    <script>

        $(".delete-btn").click(async function (item) {
            const element = $(item.target);

            let url = '{{ url('teams.delete', {id: ':id'}) }}';
            url = url.replace(':id', element.data('item-id'))
            const token = '{{ csrf_token('delete') }}'

            const userFeedBack = await Swal.fire({
                title: `Are sure to delete team ${element.data('item-name')}`,
                text: "You won't be able to revert this!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#d33',
                cancelButtonColor: '#3085d6',
                confirmButtonText: 'Yes, delete it!'
            })

            if (! userFeedBack.isConfirmed) {
                await Swal.fire({
                    title: 'Action Aborted',
                    html: 'closing in <b></b> milliseconds.',
                    timer: 2000,
                    timerProgressBar: true,
                    didOpen: () => {
                        Swal.showLoading()
                        const b = Swal.getHtmlContainer().querySelector('b')
                        timerInterval = setInterval(() => {
                            b.textContent = Swal.getTimerLeft()
                        }, 100)
                    },
                    willClose: () => {
                        clearInterval(timerInterval)
                    }
                });

                return;
            }

            const request = await fetch(url, {
                method: 'DELETE',
                headers: {
                    'X-CSRF-TOKEN': token,
                }
            })

            document.location.reload();
        })

        $('.show-players').click(function (event) {
            const modal = $('#playersModal');

            const modalTitle = $("#playersModalTitle")[0]
            const team = $(event.target)
            modalTitle.innerText = `${team.data('team-name')} Players`

            const modalContainer = $("#players-modal-body")[0]
            modalContainer.innerHTML = ''

            const players = team.data('team-players')

            players.forEach(function (player) {
                const colDiv = document.createElement('div');
                colDiv.classList.add("col-md-4")
                colDiv.classList.add("col-12")

                const cardDiv = document.createElement('div')
                cardDiv.classList.add('card')

                const cardBodyDiv = document.createElement('div')
                cardBodyDiv.classList.add('card-body')

                const cardBodyTitle = document.createElement('h5')
                cardBodyTitle.classList.add('card-title')

                const cardBodyText = document.createElement('p')
                cardBodyText.classList.add('card-text')

                const cardBodyBtn = document.createElement('a')
                cardBodyBtn.classList.add('btn')
                cardBodyBtn.classList.add('btn-primary')
                cardBodyBtn.href = '#';
                cardBodyBtn.textContent = 'View Players Stat';

                cardBodyTitle.textContent = player.surname
                cardBodyText.textContent = player.name

                cardBodyDiv.appendChild(cardBodyTitle)
                cardBodyDiv.appendChild(cardBodyText)
                cardBodyDiv.appendChild(cardBodyBtn)

                cardDiv.appendChild(cardBodyDiv)

                colDiv.appendChild(cardDiv)

                modalContainer.appendChild(colDiv)
            })

            modal.modal('show')
        })
    </script>

{% endblock %}
